name: Deploy Full Stack

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

env:
  AWS_REGION: ap-northeast-1

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    outputs:
      backend-url: ${{ steps.get-backend-url.outputs.url }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Deploy Backend
      uses: ./.github/workflows/deploy-backend.yml
      
    - name: Get Backend URL
      id: get-backend-url
      run: |
        ALB_DNS=$(aws elbv2 describe-load-balancers \
          --names vendor0913-alb \
          --query 'LoadBalancers[0].DNSName' \
          --output text)
        echo "url=https://$ALB_DNS" >> $GITHUB_OUTPUT
        
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Update Frontend Environment
      run: |
        # バックエンドURLをフロントエンドの環境変数に設定
        echo "NEXT_PUBLIC_API_BASE=${{ needs.deploy-backend.outputs.backend-url }}" >> $GITHUB_ENV
        
    - name: Deploy Frontend
      uses: ./.github/workflows/deploy-frontend.yml
      
  notify:
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: always()
    
    steps:
    - name: Notify Deployment Status
      run: |
        if [ "${{ needs.deploy-backend.result }}" == "success" ] && [ "${{ needs.deploy-frontend.result }}" == "success" ]; then
          echo "✅ Full stack deployment successful!"
          echo "Backend: ${{ needs.deploy-backend.outputs.backend-url }}"
        else
          echo "❌ Deployment failed!"
          echo "Backend: ${{ needs.deploy-backend.result }}"
          echo "Frontend: ${{ needs.deploy-frontend.result }}"
        fi
